<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>Если попытаться перетащить за "ручки" контур армирования по площади,  созданного плагином, вы получите ошибку "Линии должны образовывать замкнутые контуры".</value>
  </data>
  <data name="label2.Text" xml:space="preserve">
    <value>При автоматизированном создании "Армирования  по площади" его линии не соединяются в углах.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="linkLabel1.Size" type="System.Drawing.Size, System.Drawing">
    <value>105, 13</value>
  </data>
  <data name="linkLabel1.Text" xml:space="preserve">
    <value>Это баг в Revit API.</value>
  </data>
  <data name="label3.Text" xml:space="preserve">
    <value>Способ решения: зайти в редактирование контура, выбрать все линии контура, "Вырезать" и "Вставить по тому же месту". Данный плагин автоматизирует эти действия через имитацию нажатий клавиш на клавиатуре.</value>
  </data>
  <data name="label4.Text" xml:space="preserve">
    <value>Предварительно необходимо добавить файл горячих клавиш:</value>
  </data>
  <data name="label5.Text" xml:space="preserve">
    <value>В Revit перейдите Вид - Интерфейс - Горячие клавиши - Импорт, выберите этот файл и "Объединить".</value>
  </data>
  <data name="label6.Text" xml:space="preserve">
    <value>В Revit выберите "Армирование по площади", запустите этот плагин, нажмите Ок и сразу после этого щелкните по рабочему полю Revit (это нужно, чтобы фокус перешел на окно Revit). Плагин запустится через 3 секунды. Не трогайте мышь и клавиатуру до завершения работы.</value>
  </data>
  <data name="label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>217, 13</value>
  </data>
  <data name="label7.Text" xml:space="preserve">
    <value>Скорость (подберите экспериментально)</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>Если плагин работает нестабильно - попробуйте уменьшить скорость работы. Также работа прервется, если появится окно сохранения файла или любое другое сообщение. Для остановки работы скрипта щелкните правой кнопкой по значку "Н" в трее и выберите "Exit".</value>
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Отмена</value>
  </data>
  <data name="label9.Text" xml:space="preserve">
    <value>Плагин "Скрывает" успешно обработанные зоны "Армирования по площади", поэтому остаются видимыми необработанные зоны, для них плагин нужно будет запустить повторно.</value>
  </data>
  <data name="buttonShowHelp.Text" xml:space="preserve">
    <value>↓↓↓Показать справку↓↓↓</value>
  </data>
  <data name="buttonHideHelp.Text" xml:space="preserve">
    <value>↑↑↑Скрыть справку↑↑↑</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Ремонт фоновой арматуры</value>
  </data>
</root>